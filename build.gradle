buildscript {
    repositories {
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://oss.sonatype.org/content/groups/public' }
        maven { url "https://plugins.gradle.org/m2/" }

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id "net.kyori.blossom" version "1.1.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: modMcpMappingsChannel, version: modMcpMappingsVersion

    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version = modMinecraftVersion + "-" + modVersion
group = modGroup
archivesBaseName = modFileName

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

repositories {
    mavenCentral()
    ivy {
        url "https://download.nodecdn.net/containers/reforged/server/release"
        patternLayout {
            artifact "[revision]/[artifact].[ext]"
        }
        metadataSources {
            artifact()
        }
    }
}

blossom {
    replaceToken '@VERSION@', modVersion
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
        options.compilerArgs << "-Xlint:unchecked"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:" + modMinecraftVersion + "-" + modForgeVersion
    shadow 'com.google.guava:guava:27.1-jre'
    shadow 'com.google.code.gson:gson:2.8.6'
    implementation ":Pixelmon-1.12.2-8.3.8-server:8.3.8"
}

configurations {
    shade
    compile.extendsFrom shade
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : modId,
                "Specification-Vendor"    : modGroup,
                "Specification-Version"   : "1.0", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${archiveVersion}",
                "Implementation-Vendor"   : modGroup,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources{
    // This will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version

    // Replace stuff in mods.toml, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mods.toml'

        // Replace version
        expand 'version': project.version
    }

    // Copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mods.toml'
    }
}

shadowJar {
    relocate 'org.checkerframework', 'ca.landonjw.remoraids.internal.relocations.org.checkerframework'
    relocate 'javax', 'ca.landonjw.remoraids.internal.relocations.javax'
    relocate 'org.codehaus', 'ca.landonjw.remoraids.internal.relocations.org.codehaus'

    exclude 'dummyThing'
    exclude 'module-info.class'
}